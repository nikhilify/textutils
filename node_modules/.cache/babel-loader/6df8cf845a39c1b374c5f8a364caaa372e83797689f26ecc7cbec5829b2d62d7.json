{"ast":null,"code":"var _jsxFileName = \"E:\\\\reactjs practice\\\\textutils\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport './App.css';\nimport Navbar from './components/Navbar';\nimport TextForm from './components/TextForm';\nimport About from './components/About';\nimport React, { useState } from 'react';\n// import TodoForm from './components/TodoForm';\nimport { BrowserRouter, Route, Routes } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [mode, setMode] = useState('light');\n  const toggleMode = () => {\n    if (mode === 'light') {\n      setMode('dark');\n      document.body.style.backgroundColor = 'black';\n    } else {\n      setMode('light');\n      document.body.style.backgroundColor = 'white';\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(BrowserRouter, {\n      basename: \"/textutils\",\n      children: [/*#__PURE__*/_jsxDEV(Navbar, {\n        title: \"textutils\",\n        aboutText: \"About\",\n        mode: mode,\n        toggleMode: toggleMode\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container my-3\",\n        children: /*#__PURE__*/_jsxDEV(Routes, {\n          children: [/*#__PURE__*/_jsxDEV(Route, {\n            exact: true,\n            path: \"/about\",\n            element: /*#__PURE__*/_jsxDEV(About, {\n              mode: mode\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 41,\n              columnNumber: 47\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            exact: true,\n            path: \"/\",\n            element: /*#__PURE__*/_jsxDEV(TextForm, {\n              heading: \"Enter text to analyze\",\n              upper: \"Convert to Uppercase\",\n              mode: mode\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 42,\n              columnNumber: 42\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n_s(App, \"t02OGizjI0Uh770cQ66YY915MSs=\");\n_c = App;\n;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["Navbar","TextForm","About","React","useState","BrowserRouter","Route","Routes","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","mode","setMode","toggleMode","document","body","style","backgroundColor","children","basename","title","aboutText","fileName","_jsxFileName","lineNumber","columnNumber","className","exact","path","element","heading","upper","_c","$RefreshReg$"],"sources":["E:/reactjs practice/textutils/src/App.js"],"sourcesContent":["import './App.css';\nimport Navbar from './components/Navbar';\nimport TextForm from './components/TextForm';\nimport About from './components/About';\nimport React,{useState} from 'react';\n// import TodoForm from './components/TodoForm';\nimport {\n  BrowserRouter,\n  Route,\n  Routes,\n\n} from \"react-router-dom\";\n\nfunction App() {\n  const [mode, setMode ] = useState('light');\n\n  const toggleMode = ()=>{\n    if(mode === 'light'){\n       setMode ('dark')\n       document.body.style.backgroundColor = 'black'\n    \n    }\n    \n    else{\n      setMode ('light')\n      document.body.style.backgroundColor = 'white'\n\n    }\n  }\n  return (\n<>\n  \n  {/* <TextForm heading=\"Enter text to analyze\" upper=\"Convert to Uppercase\" mode={mode}/> */}\n\n      <BrowserRouter basename='/textutils'>\n      <Navbar title=\"textutils\"  aboutText=\"About\" mode={mode} toggleMode={toggleMode}/>\n \n    <div className='container my-3' >\n\n        <Routes>\n          <Route exact path=\"/about\" element={<About mode={mode}/>}></Route>\n          <Route exact path=\"/\" element={<TextForm heading=\"Enter text to analyze\" upper=\"Convert to Uppercase\" mode={mode}/>}/>\n        </Routes>\n      </div>\n\n    </BrowserRouter>\n\n</>\n  )\n};\n\nexport default App;\n"],"mappings":";;AAAA,OAAO,WAAW;AAClB,OAAOA,MAAM,MAAM,qBAAqB;AACxC,OAAOC,QAAQ,MAAM,uBAAuB;AAC5C,OAAOC,KAAK,MAAM,oBAAoB;AACtC,OAAOC,KAAK,IAAEC,QAAQ,QAAO,OAAO;AACpC;AACA,SACEC,aAAa,EACbC,KAAK,EACLC,MAAM,QAED,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAE1B,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAE,GAAGX,QAAQ,CAAC,OAAO,CAAC;EAE1C,MAAMY,UAAU,GAAGA,CAAA,KAAI;IACrB,IAAGF,IAAI,KAAK,OAAO,EAAC;MACjBC,OAAO,CAAE,MAAM,CAAC;MAChBE,QAAQ,CAACC,IAAI,CAACC,KAAK,CAACC,eAAe,GAAG,OAAO;IAEhD,CAAC,MAEG;MACFL,OAAO,CAAE,OAAO,CAAC;MACjBE,QAAQ,CAACC,IAAI,CAACC,KAAK,CAACC,eAAe,GAAG,OAAO;IAE/C;EACF,CAAC;EACD,oBACFX,OAAA,CAAAE,SAAA;IAAAU,QAAA,eAIMZ,OAAA,CAACJ,aAAa;MAACiB,QAAQ,EAAC,YAAY;MAAAD,QAAA,gBACpCZ,OAAA,CAACT,MAAM;QAACuB,KAAK,EAAC,WAAW;QAAEC,SAAS,EAAC,OAAO;QAACV,IAAI,EAAEA,IAAK;QAACE,UAAU,EAAEA;MAAW;QAAAS,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAC,CAAC,eAEpFnB,OAAA;QAAKoB,SAAS,EAAC,gBAAgB;QAAAR,QAAA,eAE3BZ,OAAA,CAACF,MAAM;UAAAc,QAAA,gBACLZ,OAAA,CAACH,KAAK;YAACwB,KAAK;YAACC,IAAI,EAAC,QAAQ;YAACC,OAAO,eAAEvB,OAAA,CAACP,KAAK;cAACY,IAAI,EAAEA;YAAK;cAAAW,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAC;UAAE;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC,eAClEnB,OAAA,CAACH,KAAK;YAACwB,KAAK;YAACC,IAAI,EAAC,GAAG;YAACC,OAAO,eAAEvB,OAAA,CAACR,QAAQ;cAACgC,OAAO,EAAC,uBAAuB;cAACC,KAAK,EAAC,sBAAsB;cAACpB,IAAI,EAAEA;YAAK;cAAAW,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAC;UAAE;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAC,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAChH;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACN,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAEO;EAAC,gBAElB,CAAC;AAEH;AAACf,EAAA,CApCQD,GAAG;AAAAuB,EAAA,GAAHvB,GAAG;AAoCX;AAED,eAAeA,GAAG;AAAC,IAAAuB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}